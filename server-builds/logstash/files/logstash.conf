input {
        tcp {
                port => 5000
                codec => "json"
        }
	gelf {
		port => 12201
		codec => "json"
                tags => [ "gelf" ]
	}
}
output {
      amazon_es {
        hosts => ["search-a1-logs-zic573dslxjvqbo3ognf6aq7zu.us-east-1.es.amazonaws.com"]
        region => "us-east-1"
        # aws_access_key_id, aws_secret_access_key optional if instance profile is configured
        aws_access_key_id => 'AKIAJYU73WHTEJXOB7MQ'
        aws_secret_access_key => '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'
        index => "api-logs-%{+YYYY.MM.dd}"
    }
	stdout { codec => rubydebug }
}

filter {
  if [type] == "syslog" {
    grok {
      match => { "message" => "%{SYSLOGTIMESTAMP:syslog_timestamp} %{SYSLOGHOST:syslog_hostname} %{DATA:syslog_program}(?:\[%{POSINT:syslog_pid}\])?: %{GREEDYDATA:syslog_message}" }
      add_field => [ "received_at", "%{@timestamp}" ]
      add_field => [ "received_from", "%{host}" ]
    }
    syslog_pri { }
    date {
      match => [ "syslog_timestamp", "MMM  d HH:mm:ss", "MMM dd HH:mm:ss" ]
    }
  } 

  # strips any potential trailing newlines that might break the JSON regex matcher
  mutate {
    strip => "message"
  }

  # inspired from https://gist.github.com/mcasimir/4db15d462ae9ade847f3d1887c7da292
  if [message] =~ /^{.*}$/
  {
    json {
      source => "message"
      target => "fields"
    }
    mutate {
      add_field => ["level_name", "%{[fields][level]}"]
    }
    mutate {
      replace => { "message" => "%{[fields][message]}" }
    }
    mutate {
      remove_field => [ "[fields][level]", "[fields][message]" ]
    }
  }  
}
